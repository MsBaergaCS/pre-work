* Assignment 3 - if statements

Read sections 1.3 from the
[[https://introcs.cs.princeton.edu/java/10elements/][Sedgewick / Wayne]]. 

This section covers conditionals and loops. Java *if* statements look
pretty much the same as those in Javascript 

** Conditionals

#+begin_src java
  // Example A - simple if
  if (boolean) 
    statement; 

  // Example B - if with compound statement
  if (boolean){
      statement1;
      statement2;
      ...;
      statementn;
  }

  // Example C - if with else
  if (boolean){
      statements;
  } else {
      statements;
  }

  // Example D - if with else chain
  if (boolean1) {
      statements;
  } else if (boolean2) {
      statements;
  } else {
      statements;
  }

#+end_src

In Examples B through D, if you don't have multiple statements in each
section you don't need that sections curly braces but it's generally
considered good form to use them. Also, Example D can have any number
of ~else if~ sections.

A Python *if* is similar but different due to its use of indentation
instead of brackets and the explicit elif as opposed to the Java ~else
if~.

** Loops
*** While
The Java ~while~ loop is pretty much the same as the javscript or
Python while 

#+begin_src java
// Example A
while (boolean)
  statement;

// Example B
while (boolean) {
  statemnts;
}

#+end_src

While you don't need the brackets if you only have a single statement,
it's considered bad form to omit them. 

*** for

Java's ~for~ loop is similar to Javscript but not the same as
Python's. The Python for loop is considered a ~foreach~ loop and we'll
look at Java's equivalent later.

The Java and Javascript for loops are really just a while loop in
disguise.

Let's look at this while loop:

#+begin_src java
a = 1; // INITIALIZION
while (a < 10){  // TEST
  do stuff;
  a = a + 1; // INCREMENT
}

#+end_src

In addition to the stuff you're doing, there are three basic
parts. The INITIALIZATION ~a=1~ which sets the starting value of the
loop variable, the TEST which is ~a<10~ which determines when the loop
terminates adn the INCREMENT of ~a=a+1~ which changes the value of the
test so that we eventually exit.

A for loop is of the form: 
#+begin_src java
for (INITIALIZATION, TEST, INCREMENT) {
  do stuff;
}
#+end_src

so the above while loop can be rewritten using a for: 
#+begin_src 
for (a=1; a<10; a++){
  do stuff;
}

#+end_src

That's all it is - just a shorthand for writing a while loop.


*** do while

Java also supports a do while but it's used less frequently. The
chapter will go over the details.


* Assignment

Review the exercises in the chapter. Then select three programming
exercises at least two of which use loops and write solutions. Place
these under a directory named ~pre03~ in your assignments repo and
push them up to GitHub.
