* Pre Work

** Set up your environment

1. First install the Java Development Kit. Here are videos stepping
   you through the process:

   - [[https://youtu.be/l6AQNTqSDS8][Windows 10]]
   - Mac
   - Linux

2. Set up git and GitHub. 
   - *Linux* - git should be installed. If it isn't and you're using
     Ubuntu you can install it by runing ~sudo apt-get install git~
     from the terminal.
   - *Mac* - git should be installed already 
   - *Windows*  - follow the instructions in this [[https://youtu.be/chKaJBJYlAE][video]]. 

3. Set up GitHub ssh keys.

   Follow this video walkthrough: [[https://youtu.be/AUFFudCXo0M][video]]

* Learn the basics of Git and GitHub

** Essential commands

Note that the descriptions here refer to how we're using these
commands. Some of them do far more than what's described.

| Command  | Description                        | Example                      |
|----------+------------------------------------+------------------------------|
| clone    | make a local copy of a remote repo | git clone repoaddress        |
| add      | adds a file to the repository      | git add Hello.java           |
| rm       | removes / deletes a file           | git rm Hello.java            |
| mv       | rename / move a file               | git mv oldname newname       |
| commit   | record changes to the local repo   | git commit file -m "message" |
| push     | Push pending changes to GitHub     | git push                     |
| pull     | Retrieve newer changes from GitHub | git pull                     |
| reset    | unstage a commit                   | git reset filename           |
| checkout | revert a file to last commit       | git checkout filename        |

** Workflow
*** do once
- ~git clone~ to make a local copy of a GitHub repo
*** do periodically
- ~git add~ when you are adding a new file
- ~git rm~ when you're deleting a file
- ~git mv~ when you need to move or rename a file
*** Typical day to day flow.
- when you start: change into the repo directory and issue a ~git pull~
- as you work
  - ~git commit~ frequently
  - ~git push~ periodically
  - use the above periodic commands when the situation arises
- when you're done
  - a final ~git push~

** When you get a merge conflict

Sometimes when you try to commit your changes git will give you an
error and say you have to resolve a merge conflict manually. This
sounds scary but it's pretty easy.

First, edit the file in question. You'll see something like the
following:

#+begin_example
<<<<<<< HEAD
echo "Hello World!"
hello hello
 worddddddddd
=======
echo "Hello World"
>>>>>>> newbranch
#+end_example

Look for the sections with the *>>>>>>>>*, *=======*, and *<<<<<*
sections. These represent the two versions git is trying to
merge. Just edit the file manually to make it look the way you want. 

Then save the file. Repeat this with any other files that have merge
conflicts and then complete the commit.

** Remember when all else fails

When all else fails you can always do the following: 
1. Rename the folder/directory with the repository
2. Clone a new local copy
3. Copy over anything you need from the old renamed copy
4. continue working in the new copy


* Accept the GitHub Classroom assignment link

Follow this link to create your assignments repository: [[https://classroom.github.com/a/LQFq7rWm][link]]

This will create a GitHub repository that you will use to submit your
assignments. The video under prework assignment 1 below will step
you through setting everything up.  




* Java resources
- [[https://introcs.cs.princeton.edu/java/][CS - Sedgewick / Wayne - class text]]
- [[https://horstmann.com/sjsu/cs046/][Intro to Java - Udacity CS046]]
- [[https://chortle.ccsu.edu/Java5/index.html#03][Intro to CS using Java - Kjell]]
* Assignments:
1. Assignment 1 - Hello world! - [[./pre01.org][link]]
2. Assignment 2 - Data types - [[./pre02.org][link]]
3. Assignment 3 - Conditionals and loops - [[./pre03.org][link]]
4. Assignment 4 - Arrays - [[./pre04.org][link]]
5. Note - chapter 1.5 of the text concerns graphics and is optional
6. Review chapter 1.6 from the text - nothing to submit.
7. Assignment 5 - functions (methods) - [[./pre05.org][link]]
